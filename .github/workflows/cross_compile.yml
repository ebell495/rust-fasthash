# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

name: Cross-compile

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            packages: g++-aarch64-linux-gnu
          - target: armv7-unknown-linux-gnueabihf
            package: g++-arm-linux-gnueabihf
          - target: powerpc-unknown-linux-gnu
            packages: |
              g++-powerpc-linux-gnu   \
              libc6-dev-powerpc-cross
          - target: powerpc64-unknown-linux-gnu
            packages: |
              g++-powerpc-linux-gnu   \
              g++-powerpc64-linux-gnu \
              libc6-dev-powerpc-cross \
              libc6-dev-powerpc-ppc64-cross \
              libc6-dev-ppc64-cross \
              libc6-dev-ppc64-powerpc-cross
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yq ${{ matrix.packages }}

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }} --no-default-features --features all
